@model ViewModels.Form.SchoolVision
<form id="form-SchoolVision" name="form-SchoolVision" onkeypress="schoolVision.onformKeypress('form-SchoolVision',event)">
    @Html.HiddenFor(model => model.ID)
    <div class="form-row">
        <div class="form-group col-md-12">
            @Html.LabelFor(a => a.TitleAr)
            @Html.EditorFor(model => model.TitleAr, new { htmlAttributes = new { @class = "form-control form-control-md" } })
            @Html.ValidationMessageFor(model => model.TitleAr, "", new { @class = "text-danger d-none" })
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(a => a.TitleEn)
            @Html.EditorFor(model => model.TitleEn, new { htmlAttributes = new { @class = "form-control form-control-md" } })
            @Html.ValidationMessageFor(model => model.TitleEn, "", new { @class = "text-danger d-none" })
        </div>
        <div class="form-group col-md-12">
            @Html.TextAreaFor(model => model.MessageAr, new { @class = "form-control form-control-sm local-font", @rows = 4 })
            @Html.ValidationMessageFor(model => model.MessageAr, "", new { @class = "text-danger  d-none" })
        </div>
        <div class="form-group col-md-12">
            @Html.TextAreaFor(model => model.MessageEn, new { @class = "form-control form-control-sm local-font", @rows = 4 })
            @Html.ValidationMessageFor(model => model.MessageEn, "", new { @class = "text-danger  d-none" })
        </div>
        </div>
    <div class="cmd-wrapper">
        <button type="button" onclick="schoolVision.save('form-SchoolVision')" class="btn btn-success"><i class="fas fa-check"></i> @CoreCommand.CmdSave </button>
    </div>
</form>